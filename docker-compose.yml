version: "3.8"

services:
  client:
      container_name: front
      build:
        dockerfile: pal_frontend/Dockerfile
      hostname: localhost
      ports:
        - "5440:5440"
  postgres:
    image: library/postgres:${KC_POSTGRES_IMAGE_TAG:-14}
    container_name: ${POSTGRES_CONTAINER_NAME:-postgres}
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: keycloak_db
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "5435:5435"
    restart: unless-stopped
  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    volumes:
      - ./keycloak/realm-export.json:/opt/jboss/keycloak/imports/realm-export.json
      - ./keycloak/keycloak-add-user.json:/opt/jboss/keycloak/standalone/configuration/keycloak-add-user.json
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak_db
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      #KEYCLOAK_USER: admin
      #KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-export.json
    ports:
      - "5436:5436"
    depends_on:
      - postgres
    links:
      - "postgres:postgres"
  spring-api:
    container_name: springapi
    build:
      dockerfile: demo-keycloak-resource/Dockerfile
    hostname: localhost
    ports:
      - "5450:5450"
