version: "3.8"

services:
  client:
      container_name: front
      build:
        dockerfile: pal_frontend/Dockerfile
      hostname: localhost
      ports:
        - "3010:3000"
  postgres:
    image: postgres
    container_name: cntpostgreskeycloak
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak_db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    #healthcheck:
    #  test: pg_isready -d postgres
    #  interval: 10s
    #  timeout: 5s
    #  retries: 3
    #  start_period: 5s
    ports:
      - "5435:5432"
    restart: unless-stopped
  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    volumes:
      - ./keycloak/realm-export.json:/opt/jboss/keycloak/imports/realm-export.json
      - ./keycloak/keycloak-add-user.json:/opt/jboss/keycloak/standalone/configuration/keycloak-add-user.json
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      #KEYCLOAK_USER: admin
      #KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-export.json
    ports:
      - "5436:8080"
    depends_on:
      - postgres
    #links:
    #  - "postgres:postgres"
  spring-api:
    container_name: springapi
    build:
      dockerfile: demo-keycloak-resource/Dockerfile
    hostname: localhost
    ports:
      - "5450:5450"
